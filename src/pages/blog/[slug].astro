---
import type { SanityDocument } from "@sanity/client";
import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";
import { PortableText } from "astro-portabletext";
import Layout from "../../layouts/Layout.astro";
import Footer from "../../components/Footer.astro";

const POST_QUERY = `*[_type == "post" && slug.current == $slug][0]{
  title,
  publishedAt,
  mainImage {
    asset-> {
      url
    }
  },
  body
}`;
const post = await sanityClient.fetch<SanityDocument>(POST_QUERY, Astro.params);

export async function getStaticPaths(): Promise<{ params: { slug: string } }> {
  const SLUGS_QUERY = `*[_type == "post" && defined(slug.current)]{
    "params": {"slug": slug.current}
  }`;
  return await sanityClient.fetch(SLUGS_QUERY, Astro.params);
}

const { projectId, dataset } = sanityClient.config();
const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null;
const postMainImageUrl = post.mainImage?.asset?.url;
---

<Layout title={`${post.title} | Viral Asia Blog`}>
  <main>
    <section class="bg-gradient-to-b from-purple-900 to-indigo-900 text-white py-20">
      <div class="container mx-auto max-w-4xl px-4">
        <div class="flex flex-col items-center">
          <a href="/blog" class="text-gray-200 hover:text-white mb-8 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
            </svg>
            Back to Blogs
          </a>
          <h1 class="text-4xl md:text-5xl font-bold text-center mb-6">{post.title}</h1>
          <time class="text-gray-200">
            {new Date(post.publishedAt).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
        </div>
      </div>
    </section>

    <article class="py-16">
      <div class="container mx-auto max-w-3xl px-4">
        {postMainImageUrl && (
          <div class="mb-12">
            <img
              src={postMainImageUrl}
              alt={post.title}
              class="w-full rounded-xl shadow-lg"
              width="1200"
              height="675"
            />
          </div>
        )}
        
        <div class="prose prose-lg max-w-none">
          {Array.isArray(post.body) && <PortableText value={post.body} />}
        </div>
      </div>
    </article>

    <Footer callToAction="Ready to Go Viral?" />
  </main>
</Layout>